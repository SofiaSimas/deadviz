{"version":3,"file":"index.b1de20c0.948c3cfc5fe7844423d9.hot-update.js","sources":["/Users/alfian/Documents/Project/OSS/extension/deadviz/node_modules/dayjs/plugin/relativeTime.js","/Users/alfian/Documents/Project/OSS/extension/deadviz/src/visualizer/deadlineVisualizer.js","/Users/alfian/Documents/Project/OSS/extension/deadviz/src/visualizer/visualizer.js","/Users/alfian/Documents/Project/OSS/extension/deadviz/src/visualizer/welcome.js"],"sourcesContent":["!function(r,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):r.dayjs_plugin_relativeTime=t()}(this,function(){\"use strict\";return function(r,t,e){r=r||{};var n=t.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};e.en.relativeTime=o;var d=function(t,n,d,i){for(var u,a,s,f=d.$locale().relativeTime||o,l=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],h=l.length,m=0;m<h;m+=1){var c=l[m];c.d&&(u=i?e(t).diff(d,c.d,!0):d.diff(t,c.d,!0));var y=(r.rounding||Math.round)(Math.abs(u));if(s=u>0,y<=c.r||!c.r){y<=1&&m>0&&(c=l[m-1]);var p=f[c.l];a=\"string\"==typeof p?p.replace(\"%d\",y):p(y,n,c.l,s);break}}return n?a:(s?f.future:f.past).replace(\"%s\",a)};n.to=function(r,t){return d(r,t,this,!0)},n.from=function(r,t){return d(r,t,this)};var i=function(r){return r.$u?e.utc():e()};n.toNow=function(r){return this.to(i(this),r)},n.fromNow=function(r){return this.from(i(this),r)}}});\n","import React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\nimport {Divider, Layout, Tooltip} from 'antd';\n\nconst {Header, Footer, Content} = Layout;\n\nconst Container = styled.div`\n    left: 50%;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  width: 500px;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n`;\n\nconst BoxContainer = styled.div`\n    display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nconst FadeIn = keyframes`\n      0% {\n        opacity: 0;\n        transform: scale(0);\n      }\n    \n      50% {\n        transform: scale(1.5);\n      }\n    \n      100% {\n        opacity: 1;\n        transform: scale(1);\n      }\n`\n\nconst Box = styled.div`\n    flex-grow: 0;\n    border-radius: 4px;\n    position: relative;\n    padding: 10px;\n    box-sizing: border-box;\n    height: 30px;\n    margin: 4px;\n    width: 30px;\n    cursor: pointer;\n    background-color: #fff;\n    animation: 0.1s ease-in-out both ${FadeIn};\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.25s ease-in-out;\n    animation-delay: ${props => props.delay * 0.1}s;\n    \n    &:hover {\n       box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    }\n\n`;\n\nconst PassedBox = styled(Box)`\n    background-color: red;\n`;\n\nconst Title = styled(Divider)`\n    font-size: 20px !important;\n`;\n\nconst DeadlineVisualizer = ({deadline}) => {\n    document.title = `${deadline.name} - ${deadline.summary}`;\n    return (\n        <Layout style={{height: '100vh', width: '100vw'}}>\n            <Header style={{backgroundColor: '#fff'}}>\n                <Title>{deadline.name}</Title>\n            </Header>\n            <Content>\n                <Container>\n                    <BoxContainer>\n                        {deadline.boxes.map((item, index) => item.passed ?\n                            <Tooltip title={item.info} color=\"red\">\n                                <PassedBox key={index} delay={index + 1}/>\n                            </Tooltip>\n                            :\n                            <Tooltip title={item.info}>\n                                <Box key={index} delay={index + 1}/>\n                            </Tooltip>)}\n                    </BoxContainer>\n                </Container>\n            </Content>\n            <Footer style={{backgroundColor: '#fff'}}>\n                <Divider>{deadline.summary}</Divider>\n            </Footer>\n        </Layout>\n    );\n}\n\nexport default DeadlineVisualizer;","/*global chrome*/\nimport React, {useEffect, useState} from \"react\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport DeadlineVisualizer from \"./deadlineVisualizer\";\nimport Welcome from \"./welcome\";\n\ndayjs.extend(relativeTime);\n\nconst dayInMilliseconds = 1000 * 60 * 60 * 24;\nconst weekInMilliseconds = dayInMilliseconds * 7;\n\nconst getDiffTime = (startDate, endDate) => Math.abs(endDate - startDate);\n\nconst getDiffDay = (startDate, endDate) => {\n    const diffTime = getDiffTime(startDate, endDate);\n    return Math.ceil(diffTime / dayInMilliseconds);\n}\n\nconst getDiffWeek = (startDate, endDate) => {\n    const diffTime = getDiffTime(startDate, endDate);\n    return Math.ceil(diffTime / weekInMilliseconds);\n}\n\nconst parseData = deadlines => {\n    const random = Math.ceil(Math.random() * 100)\n    const index = random % deadlines.length\n\n    const deadline = deadlines[index];\n\n    let startDate = dayjs(deadline.start);\n    let endDate = dayjs(deadline.end);\n    let summaryUnit = \"days\";\n    const diff = endDate.subtract(startDate);\n    let numOfBoxes = diff.days();\n    if (numOfBoxes > 30) {\n        summaryUnit = \"weeks\";\n        numOfBoxes = diff.weeks();\n    }\n    \n    const now = dayjs();\n\n    let passedCount = 0;\n\n    let boxes = [];\n\n    for (let i = 1; i <= numOfBoxes; i++) {\n        const date = dayjs(startDate);\n        const lastTime = date.fromNow();\n        const remainingTime = date.toNow();\n\n        if (date.isAfter(now)) {\n            boxes.push({passed: false, info: lastTime});\n        } else {\n            passedCount++;\n            boxes.push({passed: true, info: remainingTime});\n        }\n\n        if (summaryUnit === 'days') {\n            startDate.add(1, 'day');\n        } else {\n            startDate.add(7, 'day');\n        }\n    }\n\n    const remainingDays = numOfBoxes - passedCount;\n    const percentage = (passedCount / numOfBoxes * 100).toFixed(2);\n\n    return {\n        name: deadline.name,\n        boxes,\n        summary: `${remainingDays} ${summaryUnit} remaining (${percentage}%)`\n    }\n}\n\nconst Visualizer = () => {\n    const [deadline, setDeadline] = useState({});\n    const [deadlineExists, setDeadlineExists] = useState(false);\n\n    useEffect(() => {\n        chrome.storage.sync.get('deadlines', data => {\n            if (!!data && !!data.deadlines) {\n                setDeadline(parseData(data.deadlines));\n                setDeadlineExists(true);\n            }\n        })\n    }, []);\n\n    return deadlineExists ? <DeadlineVisualizer deadline={deadline} /> : <Welcome />;\n}\n\nexport default Visualizer;","import React from \"react\";\n\nconst Welcome = () => (\n    <div>Please add a new goal/plan's deadline</div>\n);\n\nexport default Welcome;"],"mappings":";;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;AAAA;AAWA;;;;;AAAA;AAOA;;;;;;;;;;;;;;AAAA;AAgBA;;;;;;;;;;;AAWA;;;AAGA;AACA;;;;;AAfA;AAsBA;;AAAA;AAIA;;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}